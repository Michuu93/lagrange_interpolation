unit Interpolacja;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, VCLTee.TeEngine,
  VCLTee.Series, Vcl.ExtCtrls, VCLTee.TeeProcs, VCLTee.Chart;

type
  TForm1 = class(TForm)
    Label2: TLabel;
    Edit1: TEdit;
    Button1: TButton;
    Label3: TLabel;
    Label4: TLabel;
    Chart1: TChart;
    Series1: TPointSeries;
    Series2: TLineSeries;
    Series3: TPointSeries;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

type vector = array [0..20] of Extended;

var
  Form1: TForm1;
  i, n: Integer;
  xx, wynik : Extended;
  x, y : vector;
  plik: TextFile;

implementation

{$R *.dfm}

function Lagrange(n: Integer; xx: Extended; x,y: vector):Extended; //dx - punkt do obliczeñ
var
  i,j: integer;
  m,l,dy: Extended;
begin
  dy:=0;
  for i:=1 to n do
  begin
    l:=1; m:=1;
    for j:=1 to n do
    if i<>j then
    begin
      m:=m*(x[i]-x[j]);
      l:=l*(xx-x[j]);
    end;
    if m <> 0 then
    dy:=dy+y[i]*l/m else dy:=dy+y[i]*l
  end;
  Lagrange:=dy;
end;

procedure wczytaj_liste_txt();
  var
    plik : TextFile;
    numer : Integer;
  begin
    numer:=0;
    AssignFile(plik, 'f.txt');
    try
      Reset(plik);
      while not Eof(plik) do
        begin
          if numer>20 then
            begin
              ShowMessage('Podaj maksymalnie 21 wartoœci f(x)!');
              exit;
            end;

          try
            Readln(plik, x[numer], y[numer]);
          except
            ShowMessage('B³¹d wczytywania x,y!');
            exit;
          end;
          numer:=numer+1;
        end;
    finally
      n:=numer;
      CloseFile(plik);
    end;
  end;

procedure TForm1.Button1Click(Sender: TObject);
  var
  skok : Extended;
  begin
    wczytaj_liste_txt;
    Label3.Caption:= '';
    Label4.Caption:= 'n = ';

    try
      xx:= StrToFloat(Edit1.Text)
    except
      ShowMessage('Podaj x!');
      exit;
    end;

    try
       wynik:= Lagrange(n, xx, x, y);
       Label3.Caption:= 'Wynik: ' + FloatToStrF(wynik, ffExponent, 15, 4);
       Label4.Caption:= 'n = ' + IntToStr(n);
    except
        ShowMessage('B³¹d wywo³ania funkcji!');
        exit;
    end;

    Series1.Clear;
    Series2.Clear;
    Series3.Clear;

    //rysowanie wczytanych punktów
    with Series1 do
      for i:=0 to n-1 do
        AddXY(x[i],y[i],'');

    //rysowanie funkcji
    skok:=x[0];
    with Series2 do
      while skok<=x[n-1] do
        begin
          AddXY(skok, Lagrange(n, skok, x, y),'');
          skok:=skok+0.01;
        end;

    //rysowanie obliczanego punktu
    with Series3 do
      AddXY(xx, wynik,'');

  end;

end.
